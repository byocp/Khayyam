<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MatlabFunc</name>
    </assembly>
    <members>
        <member name="T:MatlabFunc.MyMatClass">
            <summary>
            The MyMatClass class provides a CLS compliant, MWArray interface to the MATLAB
            functions contained in the files:
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\automated_frame_
            capture.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\digital_filterin
            g.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\digital_filterin
            g_boost.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\historian.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\image_initializa
            tion.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\is_this_bubble.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\load_config.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\Lumenera Matlab
            Driver V2.0.1 NEW 64 Bit\LucamCameraClose.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\Lumenera Matlab
            Driver V2.0.1 NEW 64 Bit\LucamCameraOpen.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\Lumenera Matlab
            Driver V2.0.1 NEW 64 Bit\LucamSetGain.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\Lumenera Matlab
            Driver V2.0.1 NEW 64 Bit\LucamSetSnapshotExposure.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\Lumenera Matlab
            Driver V2.0.1 NEW 64 Bit\LucamTakeSnapshot.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\main.m
            <newpara></newpara>
            C:\Users\Minghua\Desktop\vision_sensor_pedram\particle_counter\main\particle_counter
            .m
            <newpara></newpara>
            deployprint.m
            <newpara></newpara>
            printdlg.m
            </summary>
            <remarks>
            @Version 0.0
            </remarks>
        </member>
        <member name="M:MatlabFunc.MyMatClass.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Compiler Runtime
            instance.
            </summary>
        </member>
        <member name="M:MatlabFunc.MyMatClass.#ctor">
            <summary>
            Constructs a new instance of the MyMatClass class.
            </summary>
        </member>
        <member name="M:MatlabFunc.MyMatClass.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:MatlabFunc.MyMatClass.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:MatlabFunc.MyMatClass.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the automated_frame_capture
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the automated_frame_capture
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <param name="snapshot_exposure">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the automated_frame_capture
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <param name="snapshot_exposure">Input argument #1</param>
             <param name="gain">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the automated_frame_capture
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the automated_frame_capture
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="snapshot_exposure">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the automated_frame_capture
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="snapshot_exposure">Input argument #1</param>
             <param name="gain">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.automated_frame_capture(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the automated_frame_capture function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             This function set the minimal camera parameters using the API functions
             lucam_set_gain: 11.5
             lucam_set_snapshot_exposure: 0.5
             Two unused, useful Lucam API commands:
             (a) LucamGetExposure(cam);
             (b) LucamGetGain(cam);
             (c) LucamCaptureSaveFrame(strcat('rawfr',i,'.bmp'),false,1);
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the digital_filtering
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Enhancement
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the digital_filtering
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Enhancement
             </remarks>
             <param name="raw_image">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the digital_filtering
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Enhancement
             </remarks>
             <param name="raw_image">Input argument #1</param>
             <param name="config">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the digital_filtering MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Enhancement
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the digital_filtering MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Enhancement
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="raw_image">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the digital_filtering MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Enhancement
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="raw_image">Input argument #1</param>
             <param name="config">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the digital_filtering function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Enhancement
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the digital_filtering_boost
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the digital_filtering_boost
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <param name="image">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the digital_filtering_boost
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <param name="image">Input argument #1</param>
             <param name="config">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the digital_filtering_boost
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the digital_filtering_boost
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the digital_filtering_boost
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <param name="config">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.digital_filtering_boost(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the digital_filtering_boost function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             **************************************************************************
             Removes isolated pixels (individual 1's that are surrounded by 0's).
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.historian">
             <summary>
             Provides a void output, 0-input MWArrayinterface to the historian MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Archive
             </remarks>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.historian(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 1-input MWArrayinterface to the historian MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Archive
             </remarks>
             <param name="vargin">Input argument #1</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.historian(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the historian MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Archive
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.historian(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the historian MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Archive
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="vargin">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the image_initialization
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the image_initialization
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <param name="raw_image">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the image_initialization
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <param name="raw_image">Input argument #1</param>
             <param name="config">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the image_initialization
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the image_initialization
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="raw_image">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the image_initialization
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="raw_image">Input argument #1</param>
             <param name="config">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.image_initialization(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the image_initialization function in which the input
             and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             This function applies several standard operation including rgb2gray,
             crop, and normalization on the raw_image for any future analysis
             Import
             rgb2gray
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="image">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="image">Input argument #1</param>
             <param name="particle_pixels">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input MWArrayinterface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="image">Input argument #1</param>
             <param name="particle_pixels">Input argument #2</param>
             <param name="config">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <param name="particle_pixels">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input MWArray interface to the is_this_bubble MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="image">Input argument #1</param>
             <param name="particle_pixels">Input argument #2</param>
             <param name="config">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.is_this_bubble(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the is_this_bubble function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             std(seriesData{k+1}); 
             mean(seriesData{k+1})-median(seriesData{k+1}); 
             sum(seriesData{k+1}); 
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.load_config">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the load_config MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Config
             Format string for each line of text:
             column1: text (  s)
             column2: double (  f)
             For more information, see the TEXTSCAN documentation.
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.load_config(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the load_config MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Config
             Format string for each line of text:
             column1: text (  s)
             column2: double (  f)
             For more information, see the TEXTSCAN documentation.
             </remarks>
             <param name="matlab_config_path">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.load_config(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the load_config MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Config
             Format string for each line of text:
             column1: text (  s)
             column2: double (  f)
             For more information, see the TEXTSCAN documentation.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.load_config(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the load_config MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Config
             Format string for each line of text:
             column1: text (  s)
             column2: double (  f)
             For more information, see the TEXTSCAN documentation.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="matlab_config_path">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.load_config(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the load_config function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Config
             Format string for each line of text:
             column1: text (  s)
             column2: double (  f)
             For more information, see the TEXTSCAN documentation.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraClose">
             <summary>
             Provides a void output, 0-input MWArrayinterface to the LucamCameraClose MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraClose - Disconnects from the currently connected Lumenera camera.
             </remarks>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraClose(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 1-input MWArrayinterface to the LucamCameraClose MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraClose - Disconnects from the currently connected Lumenera camera.
             </remarks>
             <param name="cameraNum">Input argument #1</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraClose(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LucamCameraClose MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraClose - Disconnects from the currently connected Lumenera camera.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraClose(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LucamCameraClose MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraClose - Disconnects from the currently connected Lumenera camera.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="cameraNum">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraOpen">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the LucamCameraOpen MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraOpen - Connect to the Lumenera camera specified.
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraOpen(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the LucamCameraOpen MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraOpen - Connect to the Lumenera camera specified.
             </remarks>
             <param name="cameraNum">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraOpen(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LucamCameraOpen MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraOpen - Connect to the Lumenera camera specified.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraOpen(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LucamCameraOpen MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamCameraOpen - Connect to the Lumenera camera specified.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="cameraNum">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamCameraOpen(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the LucamCameraOpen function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             LucamCameraOpen - Connect to the Lumenera camera specified.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetGain">
             <summary>
             Provides a void output, 0-input MWArrayinterface to the LucamSetGain MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetGain - Sets the gain value for video mode.
             </remarks>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetGain(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 1-input MWArrayinterface to the LucamSetGain MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetGain - Sets the gain value for video mode.
             </remarks>
             <param name="gain">Input argument #1</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetGain(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 2-input MWArrayinterface to the LucamSetGain MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetGain - Sets the gain value for video mode.
             </remarks>
             <param name="gain">Input argument #1</param>
             <param name="cameraNum">Input argument #2</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetGain(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LucamSetGain MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetGain - Sets the gain value for video mode.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetGain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LucamSetGain MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetGain - Sets the gain value for video mode.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gain">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetGain(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the LucamSetGain MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetGain - Sets the gain value for video mode.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gain">Input argument #1</param>
             <param name="cameraNum">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetSnapshotExposure">
             <summary>
             Provides a void output, 0-input MWArrayinterface to the LucamSetSnapshotExposure
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetSnapshotExposure - Sets the exposure time for snapshot mode.
             </remarks>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetSnapshotExposure(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 1-input MWArrayinterface to the LucamSetSnapshotExposure
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetSnapshotExposure - Sets the exposure time for snapshot mode.
             </remarks>
             <param name="exposure">Input argument #1</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetSnapshotExposure(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a void output, 2-input MWArrayinterface to the LucamSetSnapshotExposure
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetSnapshotExposure - Sets the exposure time for snapshot mode.
             </remarks>
             <param name="exposure">Input argument #1</param>
             <param name="cameraNum">Input argument #2</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetSnapshotExposure(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LucamSetSnapshotExposure
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetSnapshotExposure - Sets the exposure time for snapshot mode.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetSnapshotExposure(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LucamSetSnapshotExposure
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetSnapshotExposure - Sets the exposure time for snapshot mode.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="exposure">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamSetSnapshotExposure(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the LucamSetSnapshotExposure
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamSetSnapshotExposure - Sets the exposure time for snapshot mode.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="exposure">Input argument #1</param>
             <param name="cameraNum">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamTakeSnapshot">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the LucamTakeSnapshot
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamTakeSnapshot - Takes a snapshot using the predefined settings.
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamTakeSnapshot(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the LucamTakeSnapshot
             MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             LucamTakeSnapshot - Takes a snapshot using the predefined settings.
             </remarks>
             <param name="cameraNum">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamTakeSnapshot(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LucamTakeSnapshot MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamTakeSnapshot - Takes a snapshot using the predefined settings.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamTakeSnapshot(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LucamTakeSnapshot MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             LucamTakeSnapshot - Takes a snapshot using the predefined settings.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="cameraNum">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.LucamTakeSnapshot(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the LucamTakeSnapshot function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             LucamTakeSnapshot - Takes a snapshot using the predefined settings.
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the main MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Load config
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the main MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Load config
             </remarks>
             <param name="file_name">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the main MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Load config
             </remarks>
             <param name="file_name">Input argument #1</param>
             <param name="plotVal">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the main MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Load config
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the main MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Load config
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="file_name">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the main MATLAB function.
             </summary>
             <remarks>
             M-Documentation:
             Load config
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="file_name">Input argument #1</param>
             <param name="plotVal">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.main(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the main function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Load config
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.particle_counter">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the particle_counter MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Input
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.particle_counter(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the particle_counter MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Input
             </remarks>
             <param name="vargin">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.particle_counter(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the particle_counter MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Input
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.particle_counter(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the particle_counter MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             Input
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="vargin">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.particle_counter(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the particle_counter function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Input
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunc.MyMatClass.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
    </members>
</doc>
